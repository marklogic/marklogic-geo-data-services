<options xmlns="http://marklogic.com/appservices/search">
  <search-option>unfiltered</search-option>
  <page-length>10</page-length>

  <!-- Limit all searches to this additional query -->
  <additional-query>
    <cts:and-query xmlns:cts="http://marklogic.com/cts">
      <cts:collection-query>
        <cts:uri>example-gkg</cts:uri>
      </cts:collection-query>
    </cts:and-query>
  </additional-query>
  <!-- Full-text search options -->
  <term apply="term">
    <empty apply="all-results"/>
    <!--
      Below some example options for full-text searches. Note that MarkLogic will
      toggle options automatically depending on caps, wildcards etc.
      See Usage Notes of http://docs.marklogic.com/cts:word-query for details.
      Also note that forcing stemmed searches will disable wildcarded searches.
    -->
    <!--
    <term-option>punctuation-insensitive</term-option>
    <term-option>stemmed</term-option>
    -->
  </term>

  <!-- Default grammer -->
  <grammar>
    <quotation>"</quotation>
    <implicit>
      <cts:and-query strength="20" xmlns:cts="http://marklogic.com/cts"/>
    </implicit>
    <starter strength="30" apply="grouping" delimiter=")">(</starter>
    <starter strength="40" apply="prefix" element="cts:not-query">-</starter>
    <joiner strength="10" apply="infix" element="cts:or-query" tokenize="word">OR</joiner>
    <joiner strength="20" apply="infix" element="cts:and-query" tokenize="word">AND</joiner>
    <joiner strength="30" apply="infix" element="cts:near-query" tokenize="word">NEAR</joiner>
    <joiner strength="30" apply="near2" consume="2" element="cts:near-query">NEAR/</joiner>
    <joiner strength="50" apply="constraint">:</joiner>
    <joiner strength="50" apply="constraint" compare="LT" tokenize="word">LT</joiner>
    <joiner strength="50" apply="constraint" compare="LE" tokenize="word">LE</joiner>
    <joiner strength="50" apply="constraint" compare="GT" tokenize="word">GT</joiner>
    <joiner strength="50" apply="constraint" compare="GE" tokenize="word">GE</joiner>
    <joiner strength="50" apply="constraint" compare="NE" tokenize="word">NE</joiner>
  </grammar>

  <!-- Default sort order. You can also associate states with sort orders to allow switching sort orders -->
  <sort-order direction="descending">
    <score/>
  </sort-order>

  <!-- Not used, but the default snippeting behavior if no state (see compact/detailed below) was specified -->
  <transform-results apply="snippet">
    <preferred-elements><element ns="" name="body"/></preferred-elements>
    <max-matches>1</max-matches>
    <max-snippet-chars>150</max-snippet-chars>
    <per-match-tokens>20</per-match-tokens>
  </transform-results>

  <!-- This controls the snippet size toggle -->
  <operator name="results">
    <state name="compact">
      <transform-results apply="snippet">
        <preferred-elements><element ns="" name="body"/></preferred-elements>
        <max-matches>1</max-matches>
        <max-snippet-chars>150</max-snippet-chars>
        <per-match-tokens>20</per-match-tokens>
      </transform-results>
    </state>
    <state name="detailed">
      <transform-results apply="snippet">
        <preferred-elements><element ns="" name="body"/></preferred-elements>
        <max-matches>2</max-matches>
        <max-snippet-chars>400</max-snippet-chars>
        <per-match-tokens>30</per-match-tokens>
      </transform-results>
    </state>
  </operator>

  <!-- Annotations (allowed pretty much anywhere) allow adding text or elements to feed custom components with options that would normally not validate) -->
  <annotation>Delta options here</annotation>

  <constraint name="GeoResolution">
    <range type="xs:int" facet="true">
      <facet-option>limit=5</facet-option>
      <facet-option>frequency-order</facet-option>
      <facet-option>descending</facet-option>
      <element ns="" name="geores"/>
      <bucket name="level1" lt="2" ge="1">Country</bucket>
      <bucket name="level2" lt="3" ge="2">US State</bucket>
      <bucket name="level3" lt="4" ge="3">US City</bucket>
      <bucket name="level4" lt="5" ge="4">World City</bucket>
      <bucket name="level5" lt="6" ge="5">World State</bucket>
    </range>
    <annotation><description xmlns="">Level of geographical resolution</description></annotation>
  </constraint>

  <constraint name="Language">
    <range type="xs:string" facet="true">
      <facet-option>limit=5</facet-option>
      <facet-option>frequency-order</facet-option>
      <facet-option>descending</facet-option>
      <element ns="" name="urllangcode" />
    </range>
  </constraint>

  <constraint name="Domain">
    <range type="xs:string" facet="true">
      <facet-option>limit=10</facet-option>
      <facet-option>frequency-order</facet-option>
      <facet-option>descending</facet-option>
      <element ns="" name="domain" />
    </range>
  </constraint>

  <constraint name="Location">
    <geo-elem-pair>
      <parent ns="" name="latlongs"/>
      <lat ns="" name="lat"/>
      <lon ns="" name="lon"/>
      <geo-option>boundaries-included</geo-option>
      <geo-option>score-function=reciprocal</geo-option>
    </geo-elem-pair>
  </constraint>

  <default-suggestion-source>
    <range type="xs:string">
      <element ns="" name="domain" />
    </range>
  </default-suggestion-source>
</options>
