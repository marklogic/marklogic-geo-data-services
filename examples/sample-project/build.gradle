buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.marklogic:marklogic-geo-data-services-modules:0.0.6"
  }
}
plugins {
  id "net.saliman.properties" version "1.5.1"
  id "com.marklogic.ml-gradle" version "3.15.2"
}
repositories {
  jcenter()
  
  // Needed for some mlcp dependencies, such as commons-csv:1.5.1-marklogic
  maven { url "http://developer.marklogic.com/maven2/" }
}

configurations {
  mlcp
}

dependencies {
  mlBundle "com.marklogic:marklogic-geo-data-services-modules:0.0.6"
  mlcp "com.marklogic:mlcp:9.0.9"

  /**
    * mlcp uses Log4j for logging, and if Log4j can't find a configuration file, it will complain and you'll
    * get none of mlcp's usually-useful logging. It is recommended then that your Gradle configuration for
    * mlcp include a directory or some other resource that provides a log4j.properties file.
    */
  mlcp files("lib")
}

// We are not using the ml-data capability of ml-gradle because we are loading from zip files.
// Prior to running this command, please execute `gradle mlDeploy`.
task loadExampleData(dependsOn: [
  "loadGDeltExampleData",
  "loadZipCodeBoundaryExampleData"
])

task loadGDeltExampleData(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlAppConfig.restPort
  database = mlAppConfig.contentDatabaseName
  input_file_path = "data/gkg_geojson"
  input_compressed = "true"
  output_collections = "example-gkg"
  output_permissions = "rest-reader,read,rest-writer,update"
  output_uri_replace = ".*/data/,'/'"
}

task loadZipCodeBoundaryExampleData(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlAppConfig.restPort
  database = mlAppConfig.contentDatabaseName
  input_file_path = "data/zipcodes"
  transform_module = "/transform/wrap-geojson.sjs"
  input_compressed = "true"
  batch_size = 1
  transaction_size = 1
  output_collections = "zipcodes,test-data"
  output_permissions = "rest-reader,read,rest-writer,update"
  output_uri_replace = ".*/data/,'/'"
}
